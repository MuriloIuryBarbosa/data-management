<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nova Ordem de Compra - Sistema de Gestão</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet"        // Função para gerar SKU
        function gerarSKU(familiaSelect, tamanhoSelect, corSelect, skuInput) {
            try {
                if (familiaSelect && familiaSelect.value && tamanhoSelect && tamanhoSelect.value && corSelect && corSelect.value && skuInput) {
                    const familiaText = familiaSelect.options[familiaSelect.selectedIndex].text;
                    const tamanhoText = tamanhoSelect.options[tamanhoSelect.selectedIndex].text;
                    const corText = corSelect.options[corSelect.selectedIndex].text;

                    skuInput.value = `${familiaText}-${tamanhoText}-${corText}`.toUpperCase().replace(/\s+/g, '');
                }
            } catch (error) {
                console.error('Error generating SKU:', error);
            }
        }- Custom CSS -->
    <link href="/css/components.css" rel="stylesheet">

    <style>
        .form-label-custom {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .form-control-custom {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 0.75rem;
            font-size: 0.95rem;
            transition: all 0.3s ease;
        }

        .form-control-custom:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .btn-success-custom {
            background: linear-gradient(135deg, #28a745, #20c997);
            border: none;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-success-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        }

        .section-header {
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 1rem;
            margin-bottom: 2rem;
        }

        .item-card {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            transition: all 0.3s ease;
        }

        .item-card:hover {
            border-color: #007bff;
            box-shadow: 0 4px 12px rgba(0, 123, 255, 0.15);
        }

        .card-header {
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: white;
            border-radius: 10px 10px 0 0 !important;
        }

        .badge-custom {
            background: linear-gradient(135deg, #6c757d, #495057);
            font-size: 0.8rem;
        }

        .input-group-text {
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            border-right: none;
            font-weight: 600;
        }

        .input-group .form-control-custom {
            border-left: none;
        }

        .input-group .form-control-custom:focus {
            border-left: none;
        }

        .remove-item-btn {
            transition: all 0.3s ease;
        }

        .remove-item-btn:hover {
            transform: scale(1.1);
        }

        .summary-card {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border: 2px solid #dee2e6;
            border-radius: 12px;
        }

        .text-success-custom {
            color: #28a745 !important;
            font-weight: 700;
        }

        .text-primary-custom {
            color: #007bff !important;
            font-weight: 600;
        }

        .alert-custom {
            border-radius: 10px;
            border: none;
        }

        .alert-success {
            background: linear-gradient(135deg, #d4edda, #c3e6cb);
        }

        .alert-danger {
            background: linear-gradient(135deg, #f8d7da, #f5c6cb);
        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="h3 mb-0 text-primary-custom">
                            <i class="fas fa-plus-circle me-3"></i>
                            Nova Ordem de Compra
                        </h1>
                        <p class="text-muted mt-1">Crie uma nova ordem de compra com múltiplos itens</p>
                    </div>
                    <div>
                        <a href="/planejamento/ordem-compra" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>
                            Voltar
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Alert Container -->
        <div id="alertContainer" class="mb-4" style="display: none;"></div>

        <!-- Form -->
        <form action="/planejamento/ordem-compra" method="POST" id="ordemCompraForm">
            <!-- Seção: Informações Gerais da OC -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle text-primary me-2"></i>
                        Informações Gerais
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="numero_oc" class="form-label-custom">
                                <i class="fas fa-hashtag me-1"></i>
                                Número da OC
                            </label>
                            <input type="text" class="form-control-custom" id="numero_oc" name="numero_oc"
                                   placeholder="Será gerado automaticamente se vazio">
                            <div class="form-text">Deixe em branco para gerar automaticamente</div>
                        </div>
                        <div class="col-md-6">
                            <label for="fornecedor" class="form-label-custom">
                                <i class="fas fa-building me-1"></i>
                                Fornecedor *
                            </label>
                            <input type="text" class="form-control-custom" id="fornecedor" name="fornecedor" required>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="data_emissao" class="form-label-custom">
                                <i class="fas fa-calendar-plus me-1"></i>
                                Data de Emissão
                            </label>
                            <input type="date" class="form-control-custom" id="data_emissao" name="data_emissao"
                                   value="<%= new Date().toISOString().split('T')[0] %>">
                        </div>
                        <div class="col-md-4">
                            <label for="data_entrega_prevista" class="form-label-custom">
                                <i class="fas fa-calendar-check me-1"></i>
                                Data de Entrega Prevista
                            </label>
                            <input type="date" class="form-control-custom" id="data_entrega_prevista" name="data_entrega_prevista">
                        </div>
                        <div class="col-md-4">
                            <label for="status_oc" class="form-label-custom">
                                <i class="fas fa-tasks me-1"></i>
                                Status da OC
                            </label>
                            <select class="form-control-custom" id="status_oc" name="status_oc">
                                <option value="rascunho">Rascunho</option>
                                <option value="aprovado">Aprovado</option>
                                <option value="em_transito">Em Trânsito</option>
                                <option value="recebido">Recebido</option>
                                <option value="cancelado">Cancelado</option>
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-12">
                            <label for="observacoes" class="form-label-custom">
                                <i class="fas fa-comment me-1"></i>
                                Observações
                            </label>
                            <textarea class="form-control-custom" id="observacoes" name="observacoes" rows="3"
                                      placeholder="Observações adicionais sobre a ordem de compra"></textarea>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Seção: Itens da Ordem de Compra -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-list text-primary me-2"></i>
                        Itens da Ordem de Compra
                    </h5>
                    <button type="button" class="btn btn-success-custom btn-sm" id="addItemBtn">
                        <i class="fas fa-plus me-2"></i>
                        Adicionar Item
                    </button>
                </div>
                <div class="card-body">
                    <div id="itemsContainer" data-familias='<%- JSON.stringify(familias) %>' data-tamanhos='<%- JSON.stringify(tamanhos) %>' data-cores='<%- JSON.stringify(cores) %>' data-item-count="1">
                        <!-- Item padrão -->
                        <div class="item-card card mb-4 border-primary" data-item-id="0">
                            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">
                                    <i class="fas fa-box me-2"></i>
                                    Item 1
                                </h6>
                                <button type="button" class="btn btn-danger btn-sm remove-item-btn" style="display: none;">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                            <div class="card-body">
                                <div class="row mb-3">
                                    <div class="col-md-4">
                                        <label class="form-label-custom">
                                            <i class="fas fa-users me-1"></i>
                                            Família *
                                        </label>
                                        <select class="form-control-custom familia-select" name="itens[0][familia_id]" required>
                                            <option value="">Selecione uma família</option>
                                            <% familias.forEach(familia => { %>
                                                <option value="<%= familia.id %>"><%= familia.nome %></option>
                                            <% }); %>
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label-custom">
                                            <i class="fas fa-expand me-1"></i>
                                            Tamanho *
                                        </label>
                                        <select class="form-control-custom tamanho-select" name="itens[0][tamanho_id]" required>
                                            <option value="">Selecione um tamanho</option>
                                            <% tamanhos.forEach(tamanho => { %>
                                                <option value="<%= tamanho.id %>"><%= tamanho.sigla || tamanho.nome %></option>
                                            <% }); %>
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label-custom">
                                            <i class="fas fa-palette me-1"></i>
                                            Cor *
                                        </label>
                                        <select class="form-control-custom cor-select" name="itens[0][cor_id]" required>
                                            <option value="">Selecione uma cor</option>
                                            <% cores.forEach(cor => { %>
                                                <option value="<%= cor.id %>"><%= cor.nome %></option>
                                            <% }); %>
                                        </select>
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label-custom">
                                            <i class="fas fa-barcode me-1"></i>
                                            SKU (Gerado Automaticamente)
                                        </label>
                                        <input type="text" class="form-control-custom sku-input" name="itens[0][sku]" readonly>
                                        <div class="form-text">Será atualizado automaticamente baseado na família, tamanho e cor selecionados</div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label-custom">
                                            <i class="fas fa-tasks me-1"></i>
                                            Status *
                                        </label>
                                        <select class="form-control-custom" name="itens[0][status]" required>
                                            <option value="pendente">Pendente</option>
                                            <option value="aprovado">Aprovado</option>
                                            <option value="em_transito">Em Trânsito</option>
                                            <option value="recebido">Recebido</option>
                                            <option value="cancelado">Cancelado</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label class="form-label-custom">
                                            <i class="fas fa-hashtag me-1"></i>
                                            Quantidade *
                                        </label>
                                        <input type="number" class="form-control-custom quantidade-input" name="itens[0][quantidade]"
                                               step="0.01" min="0" required>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label-custom">
                                            <i class="fas fa-balance-scale me-1"></i>
                                            Unidade de Medida *
                                        </label>
                                        <select class="form-control-custom unidade-select" name="itens[0][unidade_medida]" required>
                                            <option value="">Selecione a unidade</option>
                                            <option value="unidade">Unidade</option>
                                            <option value="kg">Quilograma (kg)</option>
                                            <option value="metro">Metro</option>
                                            <option value="metro_quadrado">Metro Quadrado (m²)</option>
                                            <option value="litro">Litro</option>
                                            <option value="peca">Peça</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-4">
                                        <label class="form-label-custom">
                                            <i class="fas fa-money-bill-wave me-1"></i>
                                            Valor Unitário R$ *
                                        </label>
                                        <div class="input-group">
                                            <span class="input-group-text">R$</span>
                                            <input type="number" class="form-control-custom valor-unitario-input" name="itens[0][valor_unitario_brl]"
                                                   step="0.01" min="0" required>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label-custom">
                                            <i class="fas fa-exchange-alt me-1"></i>
                                            Cotação Dólar *
                                        </label>
                                        <div class="input-group">
                                            <span class="input-group-text">R$</span>
                                            <input type="number" class="form-control-custom cotacao-input" name="itens[0][cotacao_dolar]"
                                                   step="0.0001" min="0" value="5.0000" required>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label class="form-label-custom">
                                            <i class="fas fa-dollar-sign me-1"></i>
                                            Valor Total R$
                                        </label>
                                        <div class="input-group">
                                            <span class="input-group-text">R$</span>
                                            <input type="number" class="form-control-custom valor-total-input" name="itens[0][valor_total_brl]"
                                                   step="0.01" readonly>
                                        </div>
                                        <div class="form-text">Calculado automaticamente</div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <label class="form-label-custom">
                                            <i class="fas fa-calendar-check me-1"></i>
                                            ETD Planejado *
                                        </label>
                                        <input type="date" class="form-control-custom" name="itens[0][etd_planejado]" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Seção: Resumo da OC -->
            <div class="card mb-4 shadow-sm summary-card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-bar text-primary me-2"></i>
                        Resumo da Ordem de Compra
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <i class="fas fa-list-ol fa-2x text-primary mb-2"></i>
                                <h4 class="text-primary-custom" id="totalItens">1</h4>
                                <small class="text-muted">Total de Itens</small>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <i class="fas fa-money-bill-wave fa-2x text-success mb-2"></i>
                                <h4 class="text-success-custom" id="valorTotalBRL">R$ 0,00</h4>
                                <small class="text-muted">Valor Total BRL</small>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <i class="fas fa-dollar-sign fa-2x text-info mb-2"></i>
                                <h4 class="text-info" id="valorTotalUSD">$ 0,00</h4>
                                <small class="text-muted">Valor Total USD</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Botões de Ação -->
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <button type="submit" class="btn btn-success-custom btn-lg me-3" id="submitBtn">
                        <i class="fas fa-save me-2"></i>
                        Criar Ordem de Compra
                    </button>
                    <a href="/planejamento/ordem-compra" class="btn btn-outline-secondary btn-lg">
                        <i class="fas fa-times me-2"></i>
                        Cancelar
                    </a>
                </div>
            </div>
        </form>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Função para gerar SKU
        function gerarSKU(familiaSelect, tamanhoSelect, corSelect, skuInput) {
            if (familiaSelect.value && tamanhoSelect.value && corSelect.value) {
                const familiaText = familiaSelect.options[familiaSelect.selectedIndex].text;
                const tamanhoText = tamanhoSelect.options[tamanhoSelect.selectedIndex].text;
                const corText = corSelect.options[corSelect.selectedIndex].text;

                skuInput.value = `${familiaText}-${tamanhoText}-${corText}`.toUpperCase().replace(/\s+/g, '');
            }
        }

        // Função para calcular valor total
        function calcularTotal(quantidadeInput, valorUnitarioInput, valorTotalInput) {
            try {
                if (quantidadeInput && valorUnitarioInput && valorTotalInput) {
                    const quantidade = parseFloat(quantidadeInput.value) || 0;
                    const valorUnitario = parseFloat(valorUnitarioInput.value) || 0;
                    const total = quantidade * valorUnitario;

                    valorTotalInput.value = total.toFixed(2);
                    atualizarResumo();
                }
            } catch (error) {
                console.error('Error calculating total:', error);
            }
        }

        // Função para atualizar resumo da OC
        function atualizarResumo() {
            try {
                let totalItens = document.querySelectorAll('.item-card').length;
                let valorTotalBRL = 0;

                document.querySelectorAll('.valor-total-input').forEach(input => {
                    valorTotalBRL += parseFloat(input.value) || 0;
                });

                const totalItensElement = document.getElementById('totalItens');
                const valorTotalBRLElement = document.getElementById('valorTotalBRL');
                const valorTotalUSDElement = document.getElementById('valorTotalUSD');

                if (totalItensElement) totalItensElement.textContent = totalItens;
                if (valorTotalBRLElement) valorTotalBRLElement.textContent = `R$ ${valorTotalBRL.toFixed(2)}`;
                if (valorTotalUSDElement) valorTotalUSDElement.textContent = `$ ${(valorTotalBRL / 5.0).toFixed(2)}`;
            } catch (error) {
                console.error('Error updating summary:', error);
            }
        }

        // Função para adicionar item
        function addItem() {
            try {
                const container = document.getElementById('itemsContainer');
                if (!container) {
                    console.error('Items container not found');
                    return;
                }

                const familias = JSON.parse(container.dataset.familias || '[]');
                const tamanhos = JSON.parse(container.dataset.tamanhos || '[]');
                const cores = JSON.parse(container.dataset.cores || '[]');
                let itemCounter = parseInt(container.dataset.itemCount) || 1;

                itemCounter++;
                container.dataset.itemCount = itemCounter;

                const itemCard = document.createElement('div');
                itemCard.className = 'item-card card mb-4 border-primary';
                itemCard.setAttribute('data-item-id', `new-${itemCounter}`);

                itemCard.innerHTML = `
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">
                            <i class="fas fa-box me-2"></i>
                            Item ${itemCounter}
                        </h6>
                        <button type="button" class="btn btn-danger btn-sm remove-item-btn">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label-custom">
                                    <i class="fas fa-users me-1"></i>
                                    Família *
                                </label>
                                <select class="form-control-custom familia-select" name="itens[new-${itemCounter}][familia_id]" required>
                                    <option value="">Selecione uma família</option>
                                    ${familias.map(f => `<option value="${f.id}">${f.nome}</option>`).join('')}
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label-custom">
                                    <i class="fas fa-expand me-1"></i>
                                    Tamanho *
                                </label>
                                <select class="form-control-custom tamanho-select" name="itens[new-${itemCounter}][tamanho_id]" required>
                                    <option value="">Selecione um tamanho</option>
                                    ${tamanhos.map(t => `<option value="${t.id}">${t.sigla || t.nome}</option>`).join('')}
                                </select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label-custom">
                                    <i class="fas fa-palette me-1"></i>
                                    Cor *
                                </label>
                                <select class="form-control-custom cor-select" name="itens[new-${itemCounter}][cor_id]" required>
                                    <option value="">Selecione uma cor</option>
                                    ${cores.map(c => `<option value="${c.id}">${c.nome}</option>`).join('')}
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label-custom">
                                    <i class="fas fa-barcode me-1"></i>
                                    SKU (Gerado Automaticamente)
                                </label>
                                <input type="text" class="form-control-custom sku-input" name="itens[new-${itemCounter}][sku]" readonly>
                                <div class="form-text">Será atualizado automaticamente baseado na família, tamanho e cor selecionados</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label-custom">
                                    <i class="fas fa-tasks me-1"></i>
                                    Status *
                                </label>
                                <select class="form-control-custom" name="itens[new-${itemCounter}][status]" required>
                                    <option value="pendente">Pendente</option>
                                    <option value="aprovado">Aprovado</option>
                                    <option value="em_transito">Em Trânsito</option>
                                    <option value="recebido">Recebido</option>
                                    <option value="cancelado">Cancelado</option>
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label class="form-label-custom">
                                    <i class="fas fa-hashtag me-1"></i>
                                    Quantidade *
                                </label>
                                <input type="number" class="form-control-custom quantidade-input" name="itens[new-${itemCounter}][quantidade]"
                                       step="0.01" min="0" required>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label-custom">
                                    <i class="fas fa-balance-scale me-1"></i>
                                    Unidade de Medida *
                                </label>
                                <select class="form-control-custom unidade-select" name="itens[new-${itemCounter}][unidade_medida]" required>
                                    <option value="">Selecione a unidade</option>
                                    <option value="unidade">Unidade</option>
                                    <option value="kg">Quilograma (kg)</option>
                                    <option value="metro">Metro</option>
                                    <option value="metro_quadrado">Metro Quadrado (m²)</option>
                                    <option value="litro">Litro</option>
                                    <option value="peca">Peça</option>
                                </select>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label class="form-label-custom">
                                    <i class="fas fa-money-bill-wave me-1"></i>
                                    Valor Unitário R$ *
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">R$</span>
                                    <input type="number" class="form-control-custom valor-unitario-input" name="itens[new-${itemCounter}][valor_unitario_brl]"
                                           step="0.01" min="0" required>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label-custom">
                                    <i class="fas fa-exchange-alt me-1"></i>
                                    Cotação Dólar *
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">R$</span>
                                    <input type="number" class="form-control-custom cotacao-input" name="itens[new-${itemCounter}][cotacao_dolar]"
                                           step="0.0001" min="0" value="5.0000" required>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label-custom">
                                    <i class="fas fa-dollar-sign me-1"></i>
                                    Valor Total R$
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">R$</span>
                                    <input type="number" class="form-control-custom valor-total-input" name="itens[new-${itemCounter}][valor_total_brl]"
                                           step="0.01" readonly>
                                </div>
                                <div class="form-text">Calculado automaticamente</div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label-custom">
                                    <i class="fas fa-calendar-check me-1"></i>
                                    ETD Planejado *
                                </label>
                                <input type="date" class="form-control-custom" name="itens[new-${itemCounter}][etd_planejado]" required>
                            </div>
                        </div>
                    </div>
                `;

                container.appendChild(itemCard);
                attachEventListeners(itemCard);
                atualizarResumo();
            } catch (error) {
                console.error('Error adding item:', error);
            }
        }

        // Função para remover item
        function removeItem(button) {
            try {
                const itemCard = button.closest('.item-card');
                if (!itemCard) {
                    console.error('Item card not found');
                    return;
                }

                const totalItems = document.querySelectorAll('.item-card').length;

                if (totalItems > 1) {
                    itemCard.remove();
                    atualizarResumo();
                } else {
                    alert('A ordem de compra deve ter pelo menos um item.');
                }
            } catch (error) {
                console.error('Error removing item:', error);
            }
        }

        // Função para anexar event listeners a um item
        function attachEventListeners(itemCard) {
            try {
                const familiaSelect = itemCard.querySelector('.familia-select');
                const tamanhoSelect = itemCard.querySelector('.tamanho-select');
                const corSelect = itemCard.querySelector('.cor-select');
                const skuInput = itemCard.querySelector('.sku-input');
                const quantidadeInput = itemCard.querySelector('.quantidade-input');
                const valorUnitarioInput = itemCard.querySelector('.valor-unitario-input');
                const valorTotalInput = itemCard.querySelector('.valor-total-input');
                const removeBtn = itemCard.querySelector('.remove-item-btn');

                if (!familiaSelect || !tamanhoSelect || !corSelect || !skuInput ||
                    !quantidadeInput || !valorUnitarioInput || !valorTotalInput || !removeBtn) {
                    console.error('Missing elements in item card');
                    return;
                }

                // Event listeners para SKU
                familiaSelect.addEventListener('change', () => gerarSKU(familiaSelect, tamanhoSelect, corSelect, skuInput));
                tamanhoSelect.addEventListener('change', () => gerarSKU(familiaSelect, tamanhoSelect, corSelect, skuInput));
                corSelect.addEventListener('change', () => gerarSKU(familiaSelect, tamanhoSelect, corSelect, skuInput));

                // Event listeners para cálculo
                quantidadeInput.addEventListener('input', () => calcularTotal(quantidadeInput, valorUnitarioInput, valorTotalInput));
                valorUnitarioInput.addEventListener('input', () => calcularTotal(quantidadeInput, valorUnitarioInput, valorTotalInput));

                // Event listener para remover
                removeBtn.addEventListener('click', () => removeItem(removeBtn));
            } catch (error) {
                console.error('Error attaching event listeners:', error);
            }
        }

        // Função para mostrar alertas
        function showAlert(message, type = 'success') {
            try {
                const alertContainer = document.getElementById('alertContainer');
                if (!alertContainer) {
                    console.error('Alert container not found');
                    return;
                }

                const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
                const iconClass = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle';

                alertContainer.innerHTML = `
                    <div class="alert ${alertClass} alert-custom alert-dismissible fade show" role="alert">
                        <i class="fas ${iconClass} me-2"></i>
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;
                alertContainer.style.display = 'block';

                // Auto-hide after 5 seconds
                setTimeout(() => {
                    const alert = alertContainer.querySelector('.alert');
                    if (alert) {
                        alert.classList.remove('show');
                        setTimeout(() => {
                            if (alertContainer) alertContainer.style.display = 'none';
                        }, 150);
                    }
                }, 5000);
            } catch (error) {
                console.error('Error showing alert:', error);
            }
        }

        // Função para validar formulário
        // Função para validação simples do formulário
        function validarFormulario() {
            try {
                console.log('Validating form...');
                const requiredFields = document.querySelectorAll('input[required], select[required]');
                let isValid = true;

                requiredFields.forEach(field => {
                    if (!field.value || !field.value.trim()) {
                        field.classList.add('is-invalid');
                        isValid = false;
                    } else {
                        field.classList.remove('is-invalid');
                    }
                });

                console.log('Form validation result:', isValid);
                return isValid;
            } catch (error) {
                console.error('Error in form validation:', error);
                return false;
            }
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, initializing...');

            // Verificar se elementos existem antes de anexar listeners
            const addItemBtn = document.getElementById('addItemBtn');
            const ordemCompraForm = document.getElementById('ordemCompraForm');
            const submitBtn = document.getElementById('submitBtn');

            if (!addItemBtn) {
                console.error('addItemBtn not found');
                return;
            }
            if (!ordemCompraForm) {
                console.error('ordemCompraForm not found');
                return;
            }
            if (!submitBtn) {
                console.error('submitBtn not found');
                return;
            }

            console.log('All required elements found, attaching listeners...');

            // Anexar event listeners aos itens existentes
            document.querySelectorAll('.item-card').forEach(attachEventListeners);
            atualizarResumo();

            // Event listeners principais
            addItemBtn.addEventListener('click', addItem);

            // Form submission - SIMPLIFICADO
            ordemCompraForm.addEventListener('submit', function(e) {
                console.log('Form submitted');

                if (!validarFormulario()) {
                    e.preventDefault();
                    showAlert('Por favor, preencha todos os campos obrigatórios.', 'danger');
                    console.log('Form validation failed');
                    return false;
                }

                console.log('Form is valid, proceeding with submission');
                
                // Desabilitar botão para evitar duplo envio
                submitBtn.disabled = true;
                submitBtn.textContent = 'Processando...';

                // Debug: log form data
                const formData = new FormData(ordemCompraForm);
                console.log('Form data entries:');
                for (const [key, value] of formData.entries()) {
                    console.log(`${key}: ${value}`);
                }
            });

            console.log('Event listeners attached successfully');
        });

        // Input validation feedback
        document.addEventListener('input', function(e) {
            if (e.target.classList.contains('form-control-custom')) {
                if (e.target.hasAttribute('required') && e.target.value.trim()) {
                    e.target.classList.remove('is-invalid');
                }
            }
        });

        document.addEventListener('change', function(e) {
            if (e.target.classList.contains('form-control-custom')) {
                if (e.target.hasAttribute('required') && e.target.value.trim()) {
                    e.target.classList.remove('is-invalid');
                }
            }
        });
    </script>
</body>
</html>