<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .dashboard-card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            margin-bottom: 20px;
        }

        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 30px rgba(0,0,0,0.15);
        }

        .metric-value {
            font-size: 2.5rem;
            font-weight: bold;
            color: #2c3e50;
        }

        .metric-label {
            font-size: 0.9rem;
            color: #7f8c8d;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .card-icon {
            font-size: 3rem;
            opacity: 0.7;
        }

        .bg-revenue { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }
        .bg-quantity { background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); }
        .bg-stock { background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); }
        .bg-plan { background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); }

        .chart-container {
            position: relative;
            height: 300px;
            margin-bottom: 20px;
        }

        .table-responsive {
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .table thead th {
            background-color: #f8f9fa;
            border-bottom: 2px solid #dee2e6;
            font-weight: 600;
            color: #495057;
        }

        .progress-bar {
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        }

        .stat-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .stat-title {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 5px;
            text-transform: uppercase;
            font-weight: 600;
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 0;
        }

        .stat-change {
            font-size: 0.8rem;
            font-weight: 500;
        }

        .stat-change.positive {
            color: #28a745;
        }

        .stat-change.negative {
            color: #dc3545;
        }
    </style>
</head>
<body>
    <%- include('../../layouts/partials/header') %>

    <div class="container-fluid mt-4">
        <div class="row mb-4">
            <div class="col-12">
                <h1 class="h3 mb-0 text-gray-800">
                    <i class="fas fa-tachometer-alt text-primary me-2"></i>
                    Dashboard de Planejamento
                </h1>
                <p class="text-muted">Visão geral dos indicadores de faturamento e planejamento</p>
            </div>
        </div>

        <!-- Cards de Métricas Principais -->
        <div class="row mb-4">
            <div class="col-xl-3 col-md-6">
                <div class="card dashboard-card bg-revenue text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <div class="metric-label">Faturamento Total</div>
                                <div class="metric-value">
                                    R$ <%= (dashboardData.faturamentoGeral.valor_total / 1000000).toFixed(1) %>M
                                </div>
                            </div>
                            <i class="fas fa-dollar-sign card-icon"></i>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6">
                <div class="card dashboard-card bg-quantity text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <div class="metric-label">Quantidade Total</div>
                                <div class="metric-value">
                                    <%= (dashboardData.faturamentoGeral.quantidade_total / 1000).toFixed(0) %>K
                                </div>
                            </div>
                            <i class="fas fa-boxes card-icon"></i>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6">
                <div class="card dashboard-card bg-stock text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <div class="metric-label">Estoque Atual</div>
                                <div class="metric-value">
                                    R$ <%= dashboardData.estoqueAtual ? (dashboardData.estoqueAtual.valor_estoque / 1000000).toFixed(1) : '0' %>M
                                </div>
                            </div>
                            <i class="fas fa-warehouse card-icon"></i>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6">
                <div class="card dashboard-card bg-plan text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <div class="metric-label">Business Plan</div>
                                <div class="metric-value">
                                    R$ <%= dashboardData.businessPlan ? (dashboardData.businessPlan.valor_planejado / 1000000).toFixed(1) : '0' %>M
                                </div>
                            </div>
                            <i class="fas fa-chart-line card-icon"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gráficos e Tabelas -->
        <div class="row">
            <!-- Gráfico de Faturamento por Empresa -->
            <div class="col-xl-6 col-lg-6">
                <div class="card dashboard-card">
                    <div class="card-header bg-white">
                        <h6 class="m-0 font-weight-bold text-primary">
                            <i class="fas fa-building me-2"></i>Faturamento por Empresa
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="empresaChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Gráfico de Evolução Mensal -->
            <div class="col-xl-6 col-lg-6">
                <div class="card dashboard-card">
                    <div class="card-header bg-white">
                        <h6 class="m-0 font-weight-bold text-primary">
                            <i class="fas fa-calendar-alt me-2"></i>Evolução Mensal (Últimos 12 meses)
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="mensalChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tabela de Top Famílias -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card dashboard-card">
                    <div class="card-header bg-white">
                        <h6 class="m-0 font-weight-bold text-primary">
                            <i class="fas fa-trophy me-2"></i>Top 10 Famílias por Faturamento
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Posição</th>
                                        <th>Família</th>
                                        <th>Faturamento</th>
                                        <th>Quantidade</th>
                                        <th>% do Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% dashboardData.topFamilias.forEach((familia, index) => { %>
                                    <tr>
                                        <td><span class="badge bg-primary">#<%= index + 1 %></span></td>
                                        <td><strong><%= familia.familia %></strong></td>
                                        <td>R$ <%= (familia.valor_total / 1000).toFixed(0) %>K</td>
                                        <td><%= familia.quantidade_total.toLocaleString('pt-BR') %></td>
                                        <td>
                                            <% const percentual = ((familia.valor_total / dashboardData.faturamentoGeral.valor_total) * 100).toFixed(1); %>
                                            <div class="progress" style="height: 20px;">
                                                <div class="progress-bar" role="progressbar"
                                                     style="width: <%= percentual %>%"
                                                     aria-valuenow="<%= percentual %>"
                                                     aria-valuemin="0" aria-valuemax="100">
                                                    <%= percentual %>%
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Cards de Estatísticas Detalhadas -->
        <div class="row mt-4">
            <div class="col-xl-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-title">Total de Registros</div>
                    <div class="stat-value"><%= dashboardData.faturamentoGeral.total_registros.toLocaleString('pt-BR') %></div>
                    <div class="stat-change positive">
                        <i class="fas fa-arrow-up"></i> Dados consolidados
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-title">Empresas Ativas</div>
                    <div class="stat-value"><%= dashboardData.faturamentoPorEmpresa.length %></div>
                    <div class="stat-change positive">
                        <i class="fas fa-building"></i> Unidades operacionais
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-title">Famílias Ativas</div>
                    <div class="stat-value"><%= dashboardData.topFamilias.length %></div>
                    <div class="stat-change positive">
                        <i class="fas fa-tags"></i> Linhas de produto
                    </div>
                </div>
            </div>

            <div class="col-xl-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-title">Ticket Médio</div>
                    <div class="stat-value">
                        R$ <%= (dashboardData.faturamentoGeral.valor_total / dashboardData.faturamentoGeral.quantidade_total).toFixed(2) %>
                    </div>
                    <div class="stat-change">
                        <i class="fas fa-calculator"></i> Por unidade
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Dados para os gráficos
        const empresaData = <%- JSON.stringify(dashboardData.faturamentoPorEmpresa) %>;
        const mensalData = <%- JSON.stringify(dashboardData.faturamentoPorMes) %>;

        // Gráfico de Faturamento por Empresa
        const empresaCtx = document.getElementById('empresaChart').getContext('2d');

        new Chart(empresaCtx, {
            type: 'doughnut',
            data: {
                labels: empresaData.map(item => `Empresa ${item.Empresa}`),
                datasets: [{
                    data: empresaData.map(item => item.valor_total),
                    backgroundColor: [
                        '#667eea', '#764ba2', '#f093fb', '#f5576c',
                        '#4facfe', '#00f2fe', '#43e97b', '#38f9d7'
                    ],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            padding: 20,
                            usePointStyle: true
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const value = context.parsed;
                                const total = empresaData.reduce((sum, item) => sum + item.valor_total, 0);
                                const percentage = ((value / total) * 100).toFixed(1);
                                return `R$ ${(value / 1000000).toFixed(1)}M (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });

        // Gráfico de Evolução Mensal
        const mensalCtx = document.getElementById('mensalChart').getContext('2d');

        new Chart(mensalCtx, {
            type: 'line',
            data: {
                labels: mensalData.map(item => item.periodo),
                datasets: [{
                    label: 'Faturamento (R$)',
                    data: mensalData.map(item => item.valor_total),
                    borderColor: '#667eea',
                    backgroundColor: 'rgba(102, 126, 234, 0.1)',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4,
                    pointBackgroundColor: '#667eea',
                    pointBorderColor: '#fff',
                    pointBorderWidth: 2,
                    pointRadius: 6,
                    pointHoverRadius: 8
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return `R$ ${(context.parsed.y / 1000000).toFixed(1)}M`;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return 'R$ ' + (value / 1000000).toFixed(1) + 'M';
                            }
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
    </script>
</body>
</html>